/* App is given Destination d(dx,dy), Origin o(ox,oy) and a Distance h1 (provided by user input ui),
we don't have enough data to compute point inputEndPoint(ux,uy) calculate by:                                  */

a = dx-ox; 
o = dy-oy; 
h = (a^2+o^2)^(1/2); 

// ask google the straight line distance between d and o, then get a coefficient to convert ui to h1 by map scale 

theta = (tan^(-1))(o/a); 
a1 = h1((cos^(-1))theta); 
theta1 = 90-theta; 
a2 = h1((cos^(-1))*theta1); 
a1 = ux; 
a2 = uy;
 
// else 

ux = dx; 
uy = dy;

// now CityCycleSelection

// calculate 

// case 1: quadrant on top right

if((dx-ox) >= 0 && (dy-oy) >= 0) {
   /* "HEY API!"                              
   SELECT CCLong, CCLat, ...
   FROM CityCycleLocationsAPI
   WHERE CCLat > oy AND CCLong > ox
   ORDER BY GoogleAPITravelTime;
   */
}

// case 2: quadrant on top left

if((dx-ox) <= 0 && (dy-oy) >= 0) {
   /* "HEY API!"
   SELECT CCLong, CCLat, ...
   FROM CityCycleLocationsAPI
   WHERE CCLat > oy AND ox > CCLong
   ORDER BY GoogleAPITravelTime;
   */
}

// case 3: quadrant on bottom left

if((dx-ox) <= 0 && (dy-oy) <= 0) {
   /* "HEY API!"
   SELECT CCLong, CCLat, ...
   FROM CityCycleLocationsAPI
   WHERE oy > CCLat AND ox > CCLong
   ORDER BY GoogleAPITravelTime;
   */
}

// case 4: quadrant on top left

if((dx-ox) >= 0 && (dy-oy) >= 0) {
   /* "HEY API!"
   SELECT CCLong, CCLat, ...
   FROM CityCycleLocationsAPI
   WHERE oy > CCLat AND CCLong > ox
   ORDER BY GoogleAPITravelTime;
   */
}

// next step: return to front end and visualize :)
